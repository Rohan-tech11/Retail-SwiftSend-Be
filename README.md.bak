# SwiftSend Application

SwiftSend is a Java-based middleware platform developed using the Spring Boot framework. It serves as a bridge between courier services and users in Canada, allowing users to create accounts, book orders, and enabling clients to provide and manage services. The application uses MySQL as its database (via Hibernate), React for the front end, and includes email authentication features.

## Final Year Capstone Project

This project was developed as a part of the final year capstone project. It represents the culmination of our academic journey, showcasing our skills in Java Spring Boot, React, and various technologies. We aimed to create a robust middleware platform that facilitates communication between courier services, clients, and users in Canada.

## Features

* **User Authentication:**
   * Users can create accounts and verify their emails for secure authentication.
   * JWT (JSON Web Token) is used for enhanced security.
   * Google OAuth2 integration for easy sign-in.
* **Service Booking:**
   * Users can view available services provided by different clients.
   * Book orders seamlessly through the application.
* **Client Management:**
   * Clients can sign up, verify their emails, and manage their services.
   * Admins receive notifications about new clients and can approve or reject client accounts.
* **Service Management:**
   * Approved clients can upload and manage services.
   * Uploaded services are visible to users for booking.
* **Email Authentication:**
   * Email verification is implemented for both user and client registration.
   * Java Mail Sender is utilized to send verification emails.
* **API Documentation:**
   * Swagger UI integration for easy API exploration and testing.

## Technologies Used

* **Backend:**
   * Java Spring Boot
   * Spring Security
   * Hibernate
   * JWT (JSON Web Token)
   * Java Mail Sender
   * MySQL (Database)
   * Swagger (API Documentation)
* **Frontend:**
   * React
   * JavaScript
* **Authentication:**
   * Google OAuth2
* **Containerization:**
   * Docker

## Getting Started

### Prerequisites

* Java Development Kit (JDK)
* Node.js and npm
* MySQL Server
* Maven
* Docker (optional)

### Configuration

1. Clone the repository: